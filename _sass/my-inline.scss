// You can add CSS rules here that will be inlined into each document.


$on-tablet: 768px;
$on-phone: 400px;
$emph-bkg-color: #d0d0d0 !default;

// syntax highlighting colors
$base00: #f8f8f8 !default;
$base01: #e8e8e8 !default;
$base02: #d8d8d8 !default;
$base03: #b8b8b8 !default;
$base04: #585858 !default;
$base05: #383838 !default;
$base06: #282828 !default;
$base07: #181818 !default;
$base08: #ab4642 !default;
$base09: #dc9656 !default;
$base0a: #f7ca88 !default;
$base0b: #a1b56c !default;
$base0c: #86c1b9 !default;
$base0d: #7cafc2 !default;
$base0e: #ba8baf !default;
$base0f: #a16946 !default;


body{
    --body-bg: #efefef;
    --body-color: #053b64;
    --border-color: #053b64;
}

.sidebar-bg{
    &.sidebar-overlay::after {
	background: none;
    }
}

h3, h4, h5, h6, .h3, .h4, .h5, .h6 { margin: 1rem 0 1rem; }

h2, .h2 { margin: 3rem 0 1rem; }

.content { padding: 3rem 1rem 10rem; }

.bio-row {
    @media all and (min-width: $on-phone){
	display: flex;
	flex-direction: column-reverse;
	.bio-column-1 { text-align: center; }
	.bio-column-2 { padding-bottom: 2em; }
    }
    @media all and (min-width: $on-tablet){
	display: flex;
	flex-direction: row;
	.bio-column-1 { text-align: left; }
    }

    padding-top: 0;
    border-bottom: 1px solid var(--border-color);
    align-items: center;
    margin-bottom: 3em;
}

// provide emphasized main page area for responsive columns

.bio-column-1 {
    flex: 1;
}

.bio-column-2 {
    flex: 0 1 300px;
}

.bio-pic {
    align: middle;
    width: 250px;
}

// provide minimal buttons

button, .btn {
    background: var(--body-bg);
    border-style: solid;
    color: var(--body-color);
    border-color: var(--body-color);
    font-style: normal;
    transition: color 0.2s ease-in-out,
      border-color 0.2s ease-in-out,
      background 0.2s ease-in-out;
    &:hover {
	background: var(--body-color);
	border-color: var(--body-color);
	color: var(--body-bg);
    }
    font-size: .75em;
    border-radius: none;
    width: 6em;
    text-decoration: none;
}

.btn-main {
    border-color: #c63800;
    color: #c63800;
    &:hover {
	background: #c63800;
	border-color: #c63800;
    }
}


.btn-secondary {
    border-color: #00884e;
    color: #00884e;
    &:hover {
	background: #00884e;
	border-color: #00884e;
    }
}

.btn-ternary {
    border-color: #c67100;
    color: #c67100;
    &:hover {
	background: #c67100;
	border-color: #c67100;
    }
}

// better syntax highlighting
.highlight .hl .hll {
  background-color: $base0e;
}
.highlight {
  .c {
    /* Comment */
    color: $base03;
  }
  .err {
    /* Error */
    color: $base08;
  }
  .k {
    /* Keyword */
    color: $base0e;
  }
  .l {
    /* Literal */
    color: $base09;
  }
  .n {
    /* Name */
    color: $base0c;
  }
  .o {
    /* Operator */
    color: $base08;
  }
  .p {
    /* Punctuation */
    color: $base0b;
  }
  .cm {
    /* Comment.Multiline */
    color: $base03;
  }
  .cp {
    /* Comment.Preproc */
    color: $base03;
  }
  .c1 {
    /* Comment.Single */
    color: $base03;
  }
  .cs {
    /* Comment.Special */
    color: $base03;
  }
  .gd {
    /* Generic.Deleted */
    color: $base08;
  }
  .ge {
    /* Generic.Emph */
    font-style: italic;
  }
  .gh {
    /* Generic.Heading */
    color: $base0d;
    font-weight: bold;
  }
  .gi {
    /* Generic.Inserted */
    color: $base0b;
  }
  .gp {
    /* Generic.Prompt */
    color: $base0d;
    font-weight: bold;
  }
  .gs {
    /* Generic.Strong */
    font-weight: bold;
  }
  .gu {
    /* Generic.Subheading */
    color: $base0c;
    font-weight: bold;
  }
  .kc {
    /* Keyword.Constant */
    color: $base0e;
  }
  .kd {
    /* Keyword.Declaration */
    color: $base0e;
  }
  .kn {
    /* Keyword.Namespace */
    color: $base0c;
  }
  .kp {
    /* Keyword.Pseudo */
    color: $base0e;
  }
  .kr {
    /* Keyword.Reserved */
    color: $base0e;
  }
  .kt {
    /* Keyword.Type */
    color: $base0a;
  }
  .ld {
    /* Literal.Date */
    color: $base0b;
  }
  .m {
    /* Literal.Number */
    color: $base09;
  }
  .s {
    /* Literal.String */
    color: $base0b;
  }
  .na {
    /* Name.Attribute */
    color: $base0d;
  }
  .nb {
    /* Name.Builtin */
    color: $base05;
  }
  .nc {
    /* Name.Class */
    color: $base0a;
  }
  .no {
    /* Name.Constant */
    color: $base08;
  }
  .nd {
    /* Name.Decorator */
    color: $base0c;
  }
  .ni {
    /* Name.Entity */
    color: $base05;
  }
  .ne {
    /* Name.Exception */
    color: $base08;
  }
  .nf {
    /* Name.Function */
    color: $base0d;
  }
  .nl {
    /* Name.Label */
    color: $base05;
  }
  .nn {
    /* Name.Namespace */
    color: $base0a;
  }
  .nx {
    /* Name.Other */
    color: $base0d;
  }
  .py {
    /* Name.Property */
    color: $base05;
  }
  .nt {
    /* Name.Tag */
    color: $base0c;
  }
  .nv {
    /* Name.Variable */
    color: $base08;
  }
  .ow {
    /* Operator.Word */
    color: $base0c;
  }
  .w {
    /* Text.Whitespace */
    color: $base05;
  }
  .mf {
    /* Literal.Number.Float */
    color: $base09;
  }
  .mh {
    /* Literal.Number.Hex */
    color: $base09;
  }
  .mi {
    /* Literal.Number.Integer */
    color: $base09;
  }
  .mo {
    /* Literal.Number.Oct */
    color: $base09;
  }
  .sb {
    /* Literal.String.Backtick */
    color: $base0b;
  }
  .sc {
    /* Literal.String.Char */
    color: $base05;
  }
  .sd {
    /* Literal.String.Doc */
    color: $base04;
  }
  .s2 {
    /* Literal.String.Double */
    color: $base0b;
  }
  .se {
    /* Literal.String.Escape */
    color: $base09;
  }
  .sh {
    /* Literal.String.Heredoc */
    color: $base0b;
  }
  .si {
    /* Literal.String.Interpol */
    color: $base09;
  }
  .sx {
    /* Literal.String.Other */
    color: $base0b;
  }
  .sr {
    /* Literal.String.Regex */
    color: $base0b;
  }
  .s1 {
    /* Literal.String.Single */
    color: $base0b;
  }
  .ss {
    /* Literal.String.Symbol */
    color: $base0b;
  }
  .bp {
    /* Name.Builtin.Pseudo */
    color: $base05;
  }
  .vc {
    /* Name.Variable.Class */
    color: $base08;
  }
  .vg {
    /* Name.Variable.Global */
    color: $base08;
  }
  .vi {
    /* Name.Variable.Instance */
    color: $base08;
  }
  .il {
    /* Literal.Number.Integer.Long */
    color: $base09;
  }
}
